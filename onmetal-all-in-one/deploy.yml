- job-template:
    name: 'OnMetal-AIO-Build-Host'
    description: >
        Creates a public OnMetal server and waits for it to become active.

    build-discarder:
        days-to-keep: 30
    node: 'general'
    parameters:
        - choice:
            name: REGION
            description: Region to create server in. Refer to OnMetal capacity dashboard when choosing a region.
            choices:
                - DFW
                - IAD
                - LON
        - choice:
            name: FLAVOR
            descrption: "Note: onmetal-io1 (OnMetal V1) is only avaialble in IAD"
            choices:
                - onmetal-io2
                - onmetal-io1
        - string:
            name: IMAGE
            description: Default is OnMetal - Ubuntu 14.04 LTS (Trusty Tahr)
            default: 9dc2bf0a-7771-45cd-a7f9-ce86ce94c548
        - string:
            name: SERVER_NAME
            description: Optional name for created server. Defaults to Jenkins-OM-AIO-<job build num>.
        - string:
            name: JENKINS_OA_REPO
            default: https://github.com/melissa-kam/rax-ansible-testing
        - string:
            name: JENKINS_OA_BRANCH
            default: master
    scm:
        - jenkins-oa-scm
    wrappers:
        - mask-passwords
        - ansicolor:
            colormap: xterm
    builders:
        - install-ansible
        - onmetal-aio-build-host-builder

- job-template:
    name: 'OnMetal-AIO-{deploy-action}'
    build-discarder:
        days-to-keep: 30
    node: 'general'
    parameters:
        - string:
            name: SERVER_NAME
            default: Jenkins-OM-AIO-
            description: >
               Name of server to run scripts on. Default name for servers created by OnMetal-AIO-Build-Host job
               is Jenkins-OM-AIO-<build number>.
        - choice:
            name: REGION
            description: Region of server to run scripts on
            choices:
                - DFW
                - IAD
                - LON
        - string:
            name: OSA_BRANCH
            default: stable/mitaka
        - string:
            name: OSA_OPS_REPO
            default: https://github.com/rcbops-qe/openstack-ansible-ops
        - string:
            name: OSA_OPS_BRANCH
            default: master
        - string:
            name: JENKINS_OA_REPO
            default: https://github.com/melissa-kam/rax-ansible-testing
        - string:
            name: JENKINS_OA_BRANCH
            default: master
    scm:
        - jenkins-osa-ops-scm
    wrappers:
        - mask-passwords
        - ansicolor:
            colormap: xterm
    builders:
        - install-ansible
        - onmetal-aio-ansible-action-builder:
            tags: "{tags}"

- job-template:
    name: 'OnMetal-AIO-Setup-Jenkins-Slave'
    build-discarder:
        days-to-keep: 30
    node: 'general'
    parameters:
        - string:
            name: SERVER_NAME
            default:
            description: >
               Name of server to add as Jenkins slave
        - string:
            name: SLAVE_NAME
            default:
            description: >
               Name to give slave node in Jenkins
        - string:
            name: REGION
            description: Region of server
        - string:
            name: JENKINS_OA_REPO
            default: https://github.com/melissa-kam/rax-ansible-testing
        - string:
            name: JENKINS_OA_BRANCH
            default: master
    scm:
        - jenkins-oa-scm
    wrappers:
        - mask-passwords
        - ansicolor:
            colormap: xterm
    builders:
        - install-ansible
        - setup-jenkins-swam


- job-template:
    name: 'OnMetal-AIO-Deploy-RPC'
    build-discarder:
        days-to-keep: 30
    concurrent: true
    parameters:
        - string:
            name: RPC_TAG
            default: r13.0.3
        - node:
            name: NODE
            description: "OnMetal lab to build in"
            ignore-offline-nodes: true
            allowed-multiselect: true
    wrappers:
        - mask-passwords
        - ansicolor:
            colormap: xterm
    builders:
        - onmetal-aio-deploy-rpc

- project:
    name: onmetal-all-in-one-deploy
    deploy-action:
        - Setup-Host:
            tags: host
        - Setup-Cobbler:
            tags: cobbler
        - Virtual-Networks:
            tags: networks
        - Deploy-VMs:
            tags: vms
        - OpenStack-Setup:
            tags: osa
    jobs:
        - 'OnMetal-AIO-Build-Host'
        - 'OnMetal-AIO-Setup-Jenkins-Slave'
        - 'OnMetal-AIO-{deploy-action}'
        - 'OnMetal-AIO-Deploy-RPC'

- scm:
    name: jenkins-oa-scm
    scm:
        - git:
            url: $JENKINS_OA_REPO
            branches:
                - $JENKINS_OA_BRANCH
            basedir: rax-ansible-testing
            wipe-workspace: false
- scm:
    name: osa-ops-scm
    scm:
        - git:
            url: $OSA_OPS_REPO
            branches:
                - $OSA_OPS_BRANCH
            basedir: openstack-ansible-ops
            wipe-workspace: false
- scm:
    name: jenkins-osa-ops-scm
    scm:
        - jenkins-oa-scm
        - osa-ops-scm

- builder:
    name: install-ansible
    builders:
        - shell: |
            #!/bin/bash
            if [[ ! -d ".venv" ]]; then
                virtualenv .venv
            fi
            source .venv/bin/activate
            pip install ansible pyrax

- builder:
    name: onmetal-aio-build-host-builder
    description: Creates an OnMetal cloud server.
    builders:
        - shell: |
            #!/bin/bash
            source .venv/bin/activate

            export ANSIBLE_FORCE_COLOR=true
            export RAX_CREDS_FILE=~/.rackspace_cloud_credentials
            export RAX_REGION=$REGION
            export SERVER_NAME=${SERVER_NAME:-"Jenkins-OM-AIO-$BUILD_NUMBER"}

            ansible-playbook public-cloud-deploy.yml -i inventory/ --extra-vars "name=$SERVER_NAME flavor=$FLAVOR image=$IMAGE count=1 key_name=jenkins group=om-aio" --tags build --skip-tags always

- builder:
    name: setup-jenkins-swam
    description: Runs Jenkins swarm/slave setup script
    builders:
        - shell: |
            #!/bin/bash
            source .venv/bin/activate
            cd rax-ansible-testing

            export ANSIBLE_FORCE_COLOR=true
            export RAX_CREDS_FILE=~/.rackspace_cloud_credentials
            export RAX_REGION=$REGION
            export ANSIBLE_HOST_KEY_CHECKING=False

            ansible-playbook deploy-jenkins-slave.yml -i inventory/ --extra-vars "name=$SERVER_NAME slave_name=$SLAVE_NAME github_username=rpc-qe github_token=$PERSONAL_ACCESS_TOKEN" --skip build

- builder:
    name: onmetal-aio-ansible-action-builder
    description: Runs deployment playbook with specified tags
    builders:
        - shell: |
            #!/bin/bash
            source .venv/bin/activate
            cd rax-ansible-testing

            export ANSIBLE_FORCE_COLOR=true
            export RAX_CREDS_FILE=~/.rackspace_cloud_credentials
            export RAX_REGION=$REGION
            export ANSIBLE_HOST_KEY_CHECKING=False

            ansible-playbook public-cloud-deploy.yml -i inventory/ --extra-vars "name=$SERVER_NAME osa_branch=$OSA_BRANCH" --skip-tags build --tags {tags}

- builder:
    name: onmetal-aio-deploy-rpc
    description: Runs all setup and deployment of RPC
    builders:
        - shell: |
            #!/bin/bash -xe
            rm -rf /opt/rpc-openstack

            git clone -b $RPC_TAG --recursive https://github.com/rcbops/rpc-openstack /opt/rpc-openstack
            cd  /opt/rpc-openstack

            cp /etc/openstack_deploy/user_variables.yml /etc/openstack_deploy/user_variables.yml.bak
            cp -R openstack-ansible/etc/openstack_deploy /etc
            cp /etc/openstack_deploy/user_variables.yml.bak /etc/openstack_deploy/user_variables.yml

            mv /etc/openstack_deploy/user_secrets.yml /etc/openstack_deploy/user_osa_secrets.yml
            cp rpcd/etc/openstack_deploy/user_*_defaults.yml /etc/openstack_deploy
            cp rpcd/etc/openstack_deploy/user_rpco_secrets.yml /etc/openstack_deploy
            cp rpcd/etc/openstack_deploy/env.d/* /etc/openstack_deploy/env.d

            export DEPLOY_ELK=no
            export DEPLOY_HARDENING=no
            export DEPLOY_TEMPEST=yes
            export DEFAULT_CONNECTION_PLUGIN_PATH=plugins/connection_plugins
            export DEFAULT_TRANSPORT=ssh_retry

            ./scripts/deploy.sh
